
spring:
  config:
    import:
      - optional:file:env/spring.env[.properties]
  profiles:
    active: local
    group:
      local: local, common, secret
      blue: blue, common, secret
      green: green, common, secret
server:
  env: blue

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          naver:
            redirect-uri: ${NAVER_DEV_REDIRECT_URL}
          google:
            redirect-uri: ${GOOGLE_DEV_REDIRECT_URL}
          kakao:
            redirect-uri: ${KAKAO_DEV_REDIRECT_URL}
server:
  port: 8081
  address: localhost
  name: local_server

---

spring:
  config:
    activate:
      on-profile: blue
  security:
    oauth2:
      client:
        registration:
          naver:
            redirect-uri: ${NAVER_PROD_REDIRECT_URL}
          google:
            redirect-uri: ${GOOGLE_PROD_REDIRECT_URL}
          kakao:
            redirect-uri: ${KAKAO_PROD_REDIRECT_URL}

server:
  port: 8081
  address: 211.210.61.46
  name: blue_server

---

spring:
  config:
    activate:
      on-profile: green
  security:
    oauth2:
      client:
        registration:
          naver:
            redirect-uri: ${NAVER_PROD_REDIRECT_URL}
          google:
            redirect-uri: ${GOOGLE_PROD_REDIRECT_URL}
          kakao:
            redirect-uri: ${KAKAO_PROD_REDIRECT_URL}

server:
  port: 8082
  address: 211.210.61.46
  name: green_server

---



spring:
  config:
    activate:
      on-profile: common
  datasource:
    driver-class-name: org.postgresql.Driver
    url : ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  logging:
    level:
      org:
        hibernate:
          SQL: debug

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  jwt:
    secret: ${JWT_SECRET_KEY}
    access:
      expiration: ${ACCESS_TIME}
    refresh:
      expiration: ${REFRESH_TIME}

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope:
              - name
              - email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope:
              - profile
              - email
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

springdoc:
  show-login-endpoint: true
  show-oauth2-endpoints: true

server:
  port: ${PORT}

logging:
  level:
    org.springframework.security: DEBUG

gpt:
  api:
    key: ${GPT_API_KEY}
  assistants:
    key: ${GPT_ASSISTANTS_KEY}